<div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/lib/goog/async/run.js.src.html#l30">code &raquo;</a><code class="type">&lt;THIS&gt;</code> <span class="member"><a name="goog.async.run">goog.async.run</a> <span class="args">( callback, opt_context )</span></span></div><p>Fires the provided callback just before the current callstack unwinds, or as
 soon as possible after the current JS execution context.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>callback<dt>opt_context: <code class="type">THIS=</code><dd>Object to use as the "this value" when calling
     the provided function.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/lib/goog/async/nexttick.js.src.html#l37">code &raquo;</a><span class="member"><a name="goog.async.throwException">goog.async.throwException</a> <span class="args">( exception )</span></span></div><p>Throw an item without interrupting the current execution context.  For
 example, if processing a group of items in a loop, sometimes it is useful
 to report an error while still allowing the rest of the batch to be
 processed.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>exception</dl></table></div></details></div></div></section>