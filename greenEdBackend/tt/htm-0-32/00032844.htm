<div><a class="source" href="source/lib/goog/json/json.js.src.html#l155">code &raquo;</a><span class="member"><a name="goog.json.serialize">goog.json.serialize</a> <span class="args">( object, opt_replacer )</span> &rArr; <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code></span></div><p>Serializes an object or a value to a JSON string.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>object: <code class="type">*</code><dd>The object to serialize.<dt>opt_replacer: <code class="type">?<a href="namespace_goog_json.html#goog.json.Replacer">goog.json.Replacer</a>=</code><dd>A replacer function
     called for each (key, value) pair that determines how the value
     should be serialized. By defult, this just returns the value
     and allows default serialization to kick in.</dl><tr><th>Returns<tr><td><dl>A JSON string representation of the input.</dl><tr><th>Throws<tr><td><dl><dt><dd>if there are loops in the object graph.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/lib/goog/json/json.js.src.html#l117">code &raquo;</a><span class="member"><a name="goog.json.unsafeParse">goog.json.unsafeParse</a> <span class="args">( s )</span> &rArr; <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a></code></span></div><p>Parses a JSON string and returns the result. This uses eval so it is open
 to security issues and it should only be used if you trust the source.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>s: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code><dd>The JSON string to parse.</dl><tr><th>Returns<tr><td><dl>The object generated from the JSON string.</dl></table></div></details></div></div></section>