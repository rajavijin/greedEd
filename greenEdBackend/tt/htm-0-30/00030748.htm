<div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>obj: <code class="type">(<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a>|<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function">Function</a>)</code><dd>The JavaScript or native object or function to
     alter. See the constraints in the class description.<dt>key: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code><dd>The key to delete.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/lib/goog/testing/propertyreplacer.js.src.html#l183">code &raquo;</a><span class="member"><a name="replace">replace</a> <span class="args">( obj, key, value )</span></span></div><p>Changes an existing value in an object to another one of the same type while
 saving its original state. The advantage of <code >replace</code> over <code  class="type"><a class="unresolved-link">#set</a></code>
 is that <code >replace</code> protects against typos and erroneously passing tests
 after some members have been renamed during a refactoring.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>obj: <code class="type">(<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a>|<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function">Function</a>)</code><dd>The JavaScript or native object or function to
     alter. See the constraints in the class description.<dt>key: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code><dd>The key to change the value for. It has to be present
     either in <code >obj</code> or in its prototype chain.<dt>value: <code class="type">*</code><dd>The new value to set. It has to have the same type as the
     original value. The types are compared with <code  class="type"><a href="namespace_goog.html#goog.typeOf">goog.typeOf</a></code>.</dl><tr><th>Throws<tr><td><dl><dt><code class="type"><a href="http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Error">Error</a></code><dd>In case of missing key or type mismatch.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/lib/goog/testing/propertyreplacer.js.src.html#l235">code &raquo;</a><span class="member"><a name="reset">reset</a> <span class="args">( )</span></span></div><p>Resets all changes made by goog.testing.PropertyReplacer.prototype.set.</summary></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/lib/goog/testing/propertyreplacer.js.src.html#l162">code &raquo;</a><span class="member"><a name="set">set</a> <span class="args">( obj, key, value )</span></span></div><p>Adds or changes a value in an object while saving its original state.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>obj: <code class="type">(<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a>|<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function">Function</a>)</code><dd>The JavaScript or native object or function to
     alter. See the constraints in the class description.<dt>key: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code><dd>The key to change the value for.<dt>value: <code class="type">*</code><dd>The new value to set.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/lib/goog/testing/propertyreplacer.js.src.html#l201">code &raquo;</a><span class="member"><a name="setPath">setPath</a> <span class="args">( path, value )</span></span></div><p>Builds an object structure for the provided namespace path.  Doesn't
 overwrite those prefixes of the path that are already objects or functions.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>path: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code><dd>The path to create or alter, e.g. 'goog.ui.Menu'.<dt>value: <code class="type">*</code><dd>The value to set.</dl></table></div></details></div></div></section>