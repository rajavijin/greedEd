<div class="wrap-details private"><div><details><summary><div><a class="source" href="source/lib/goog/structs/map.js.src.html#l66">code &raquo;</a><span class="member"><a name="keys_">keys_</a> : <code class="type">!<a href="http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array">Array</a>.&lt;<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a>&gt;</code></span></div><p>An array of keys. This is necessary for two reasons:
   1. Iterating the keys using for (var key in this.map_) allocates an
      object for every key in IE which is really bad for IE6 GC perf.
   2. Without a side data structure, we would need to escape all the keys
      as that would be the only way we could tell during iteration if the
      key was an internal key or a property of the object.

 This array can contain deleted keys so it's necessary to check the map
 as well to see if the key is still in the map (this doesn't require a
 memory allocation in IE).</summary></details></div></div><div class="wrap-details private"><div><details><summary><div><a class="source" href="source/lib/goog/structs/map.js.src.html#l51">code &raquo;</a><span class="member"><a name="map_">map_</a> : <code class="type">!<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a></code></span></div><p>Underlying JS object used to implement the map.</summary></details></div></div><div class="wrap-details private"><div><details><summary><div><a class="source" href="source/lib/goog/structs/map.js.src.html#l78">code &raquo;</a><span class="member"><a name="version_">version_</a> : <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number">number</a></code></span></div><p>Version used to detect changes while iterating.</summary></details></div></div></section>