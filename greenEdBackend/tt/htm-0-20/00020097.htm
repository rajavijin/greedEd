<div><a class="source" href="source/lib/webdriver/webdriver.js.src.html#l2026">code &raquo;</a><span class="member"><a name="isSelected">isSelected</a> <span class="args">( )</span> &rArr; <code class="type">!<a href="class_webdriver_promise_Promise.html">webdriver.promise.Promise</a>.&lt;<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a>&gt;</code></span></div><p>Schedules a command to query whether this element is selected.</summary><div class="info"><table><tbody><tr><th>Returns<tr><td><dl>A promise that will be
     resolved with whether this element is currently selected.</dl></table></div></details></div></div><div class="wrap-details private"><div><details class="function"><summary><div><a class="source" href="source/lib/webdriver/webdriver.js.src.html#l1725">code &raquo;</a><code class="type">&lt;T&gt;</code> <span class="member"><a name="schedule_">schedule_</a> <span class="args">( command, description )</span> &rArr; <code class="type">!<a href="class_webdriver_promise_Promise.html">webdriver.promise.Promise</a>.&lt;T&gt;</code></span></div><p>Schedules a command that targets this element with the parent WebDriver
 instance. Will ensure this element's ID is included in the command parameters
 under the "id" key.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>command: <code class="type">!<a href="class_webdriver_Command.html">webdriver.Command</a></code><dd>The command to schedule.<dt>description: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code><dd>A description of the command for debugging.</dl><tr><th>Returns<tr><td><dl>A promise that will be resolved
     with the command result.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/lib/webdriver/webdriver.js.src.html#l1878">code &raquo;</a><span class="member"><a name="sendKeys">sendKeys</a> <span class="args">( var_args )</span> &rArr; <code class="type">!<a href="class_webdriver_promise_Promise.html">webdriver.promise.Promise</a>.&lt;void&gt;</code></span></div><p>Schedules a command to type a sequence on the DOM element represented by this
 instance.
 <p/>
 Modifier keys (SHIFT, CONTROL, ALT, META) are stateful; once a modifier is
 processed in the keysequence, that key state is toggled until one of the
 following occurs:
 <ul>
 <li>The modifier key is encountered again in the sequence. At this point the
 state of the key is toggled (along with the appropriate keyup/down events).
 </li>
 <li>The <code >webdriver.Key.NULL</code> key is encountered in the sequence. When
 this key is encountered, all modifier keys current in the down state are
 released (with accompanying keyup events). The NULL key can be used to
 simulate common keyboard shortcuts:
 <code><pre>
     element.sendKeys("text was",
                      webdriver.Key.CONTROL, "a", webdriver.Key.NULL,
                      "now text is");
     // Alternatively:
     element.sendKeys("text was",
                      webdriver.Key.chord(webdriver.Key.CONTROL, "a"),
                      "now text is");
 </pre></code></li>
 <li>The end of the keysequence is encountered. When there are no more keys
 to type, all depressed modifier keys are released (with accompanying keyup
 events).
 </li>
 </ul>
 <strong>Note:</strong> On browsers where native keyboard events are not yet
 supported (e.g. Firefox on OS X), key events will be synthesized. Special
 punctionation keys will be synthesized according to a standard QWERTY en-us
 keyboard layout.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>var_args: <code class="type">...<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code><dd>The sequence of keys to
     type. All arguments will be joined into a single sequence (var_args is
     permitted for convenience).</dl><tr><th>Returns<tr><td><dl>A promise that will be resolved
     when all keys have been typed.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/lib/webdriver/webdriver.js.src.html#l2040">code &raquo;</a><span class="member"><a name="submit">submit</a> <span class="args">( )</span> &rArr; <code class="type">!<a href="class_webdriver_promise_Promise.html">webdriver.promise.Promise</a>.&lt;void&gt;</code></span></div><p>Schedules a command to submit the form containing this element (or this
 element if it is a FORM element). This command is a no-op if the element is
 not contained in a form.</summary><div class="info"><table><tbody><tr><th>Returns<tr><td><dl>A promise that will be resolved
     when the form has been submitted.</dl></table></div></details></div></div></section>