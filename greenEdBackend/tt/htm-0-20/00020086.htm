<div id="main-wrapper"><input type="checkbox" id="sidenav-toggle" /><main><header><h1>Class webdriver.WebElement</h1><a class="source" href="source/lib/webdriver/webdriver.js.src.html#l1637">code &raquo;</a></header><section><p>Represents a DOM element. WebElements can be found by searching from the
 document root using a <code >webdriver.WebDriver</code> instance, or by searching
 under another <code >webdriver.WebElement</code>:
 <pre><code>
   driver.get('http://www.google.com');
   var searchForm = driver.findElement(By.tagName('form'));
   var searchBox = searchForm.findElement(By.name('q'));
   searchBox.sendKeys('webdriver');
 </code></pre>

 The WebElement is implemented as a promise for compatibility with the promise
 API. It will always resolve itself when its internal state has been fully
 resolved and commands may be issued against the element. This can be used to
 catch errors when an element cannot be located on the page:
 <pre><code>
   driver.findElement(By.id('not-there')).then(function(element) {
     alert('Found an element that was not expected to be there!');
   }, function(error) {
     alert('The element was not found, as expected');
   });
 </code></pre><h2>Constructor</h2><div class="ctor wrap-details public"><div><div class="ctor"><span class="member">webdriver.WebElement <span class="args">( driver, id )</span></span></div><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>driver: <code class="type">!<a href="class_webdriver_WebDriver.html">webdriver.WebDriver</a></code><dd>The parent WebDriver instance for this
     element.<dt>id: <code class="type">!(<a href="class_webdriver_promise_Promise.html">webdriver.promise.Promise</a>.&lt;<a href="class_webdriver_WebElement.html#webdriver.WebElement.Id">webdriver.WebElement.Id</a>&gt;|<a href="class_webdriver_WebElement.html#webdriver.WebElement.Id">webdriver.WebElement.Id</a>)</code><dd>The server-assigned opaque ID for the
     underlying DOM element.</dl></table></div></div></div></section>