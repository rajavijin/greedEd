<div class="info"><table><tbody><tr><th>Returns<tr><td><dl>A promise that resolves to
    the server's address.</dl><tr><th>Throws<tr><td><dl><dt><code class="type"><a href="http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Error">Error</a></code><dd>If the server has not been started.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/remote/index.js.src.html#l141">code &raquo;</a><span class="member"><a name="isRunning">isRunning</a> <span class="args">( )</span> &rArr; <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a></code></span></div><p>Returns whether the underlying process is still running. This does not take
 into account whether the process is in the process of shutting down.</summary><div class="info"><table><tbody><tr><th>Returns<tr><td><dl>Whether the underlying service process is running.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/remote/index.js.src.html#l211">code &raquo;</a><span class="member"><a name="kill">kill</a> <span class="args">( )</span> &rArr; <code class="type">!<a href="class_webdriver_promise_Promise.html">webdriver.promise.Promise</a></code></span></div><p>Stops the service if it is not currently running. This function will kill
 the server immediately. To synchronize with the active control flow, use
 <code  class="type"><a class="unresolved-link">#stop()</a></code>.</summary><div class="info"><table><tbody><tr><th>Returns<tr><td><dl>A promise that will be resolved when
     the server has been stopped.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/remote/index.js.src.html#l155">code &raquo;</a><span class="member"><a name="start">start</a> <span class="args">( opt_timeoutMs )</span> &rArr; <code class="type">!promise.Promise.&lt;<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a>&gt;</code></span></div><p>Starts the server if it is not already running.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>opt_timeoutMs: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number">number</a>=</code><dd>How long to wait, in milliseconds, for the
     server to start accepting requests. Defaults to 30 seconds.</dl><tr><th>Returns<tr><td><dl>A promise that will resolve
     to the server's base URL when it has started accepting requests. If the
     timeout expires before the server has started, the promise will be
     rejected.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/remote/index.js.src.html#l227">code &raquo;</a><span class="member"><a name="stop">stop</a> <span class="args">( )</span> &rArr; <code class="type">!<a href="class_webdriver_promise_Promise.html">webdriver.promise.Promise</a></code></span></div><p>Schedules a task in the current control flow to stop the server if it is
 currently running.</summary><div class="info"><table><tbody><tr><th>Returns<tr><td><dl>A promise that will be resolved when
     the server has been stopped.</dl></table></div></details></div></div></section>