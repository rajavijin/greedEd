<div id="main-wrapper"><input type="checkbox" id="sidenav-toggle" /><main><header><h1>Class goog.Uri</h1><a class="source" href="source/lib/goog/uri/uri.js.src.html#l72">code &raquo;</a></header><section><p>This class contains setters and getters for the parts of the URI.
 The <code>getXyz</code>/<code>setXyz</code> methods return the decoded part
 -- so<code>goog.Uri.parse('/foo%20bar').getPath()</code> will return the
 decoded path, <code>/foo bar</code>.

 Reserved characters (see RFC 3986 section 2.2) can be present in
 their percent-encoded form in scheme, domain, and path URI components and
 will not be auto-decoded. For example:
 <code>goog.Uri.parse('rel%61tive/path%2fto/resource').getPath()</code> will
 return <code>relative/path%2fto/resource</code>.

 The constructor accepts an optional unparsed, raw URI string.  The parser
 is relaxed, so special characters that aren't escaped but don't cause
 ambiguities will not cause parse failures.

 All setters return <code>this</code> and so may be chained, a la
 <code>goog.Uri.parse('/foo').setFragment('part').toString()</code>.<h2>Constructor</h2><div class="ctor wrap-details public"><div><div class="ctor"><span class="member">goog.Uri <span class="args">( opt_uri, opt_ignoreCase )</span></span></div><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>opt_uri: <code class="type">*=</code><dd>Optional string URI to parse
        (use goog.Uri.create() to create a URI from parts), or if
        a goog.Uri is passed, a clone is created.<dt>opt_ignoreCase: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a>=</code><dd>If true, #getParameterValue will ignore
 the case of the parameter name.</dl></table></div></div></div></section>