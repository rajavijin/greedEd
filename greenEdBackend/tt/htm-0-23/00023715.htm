<div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/lib/goog/testing/events/events.js.src.html#l622">code &raquo;</a><span class="member"><a name="goog.testing.events.fireTouchStartEvent">goog.testing.events.fireTouchStartEvent</a> <span class="args">( target, opt_coords, opt_eventProperties )</span> &rArr; <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a></code></span></div><p>Simulates a touchstart event on the given target.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>target: <code class="type">EventTarget</code><dd>The target for the event.<dt>opt_coords: <code class="type"><a href="class_goog_math_Coordinate.html">goog.math.Coordinate</a>=</code><dd>Touch position. Defaults to event's
     target's position (if available), otherwise (0, 0).<dt>opt_eventProperties: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a>=</code><dd>Event properties to be mixed into the
     BrowserEvent.</dl><tr><th>Returns<tr><td><dl>The returnValue of the event: false if preventDefault() was
     called on it, true otherwise.</dl></table></div></details></div></div><div class="wrap-details private"><div><details class="function"><summary><div><a class="source" href="source/lib/goog/testing/events/events.js.src.html#l284">code &raquo;</a><span class="member"><a name="goog.testing.events.isBrokenGeckoMacActionKey_">goog.testing.events.isBrokenGeckoMacActionKey_</a> <span class="args">( e )</span> &rArr; <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a></code></span></div></summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>e: <code class="type"><a href="class_goog_testing_events_Event.html">goog.testing.events.Event</a></code><dd>The event.</dl><tr><th>Returns<tr><td><dl>Whether this is the Gecko/Mac's Meta-C/V/X, which
     is broken and requires special handling.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/lib/goog/testing/events/events.js.src.html#l709">code &raquo;</a><span class="member"><a name="goog.testing.events.mixinListenable">goog.testing.events.mixinListenable</a> <span class="args">( obj )</span></span></div><p>Mixins a listenable into the given object. This turns the object
 into a goog.events.Listenable. This is useful, for example, when
 you need to mock a implementation of listenable and still want it
 to work with goog.events.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>obj: <code class="type">!<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a></code><dd>The object to mixin into.</dl></table></div></details></div></div><div class="wrap-details private"><div><details class="function"><summary><div><a class="source" href="source/lib/goog/testing/events/events.js.src.html#l133">code &raquo;</a><span class="member"><a name="goog.testing.events.setEventClientXY_">goog.testing.events.setEventClientXY_</a> <span class="args">( event, opt_coords )</span></span></div><p>A static helper function that sets the mouse position to the event.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>event: <code class="type">Event</code><dd>A simulated native event.<dt>opt_coords: <code class="type"><a href="class_goog_math_Coordinate.html">goog.math.Coordinate</a>=</code><dd>Mouse position. Defaults to event's
 target's position (if available), otherwise (0, 0).</dl></table></div></details></div></div></section>