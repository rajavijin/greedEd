<div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>obj: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a>.&lt;K, V&gt;</code><dd>The object to check.<dt>f: <code class="type">function(this: T, V, ?, <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a>.&lt;K, V&gt;): <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean">boolean</a></code><dd>The function to
     call for every element. This function
     takes 3 arguments (the element, the index and the object) and should
     return a boolean.<dt>opt_obj: <code class="type">T=</code><dd>This is used as the 'this' object within f.</dl><tr><th>Returns<tr><td><dl>true if any element passes the test.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/lib/goog/object/object.js.src.html#l518">code &raquo;</a><span class="member"><a name="goog.object.transpose">goog.object.transpose</a> <span class="args">( obj )</span> &rArr; <code class="type">!<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a></code></span></div><p>Returns a new object in which all the keys and values are interchanged
 (keys become values and values become keys). If multiple keys map to the
 same value, the chosen transposed value is implementation-dependent.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>obj: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object">Object</a></code><dd>The object to transpose.</dl><tr><th>Returns<tr><td><dl>The transposed object.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/lib/goog/object/object.js.src.html#l493">code &raquo;</a><span class="member"><a name="goog.object.unsafeClone">goog.object.unsafeClone</a> <span class="args">( obj )</span> &rArr; <code class="type">*</code></span></div><p>Clones a value. The input may be an Object, Array, or basic type. Objects and
 arrays will be cloned recursively.

 WARNINGS:
 <code>goog.object.unsafeClone</code> does not detect reference loops. Objects
 that refer to themselves will cause infinite recursion.

 <code>goog.object.unsafeClone</code> is unaware of unique identifiers, and
 copies UIDs created by <code>getUid</code> into cloned results.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>obj: <code class="type">*</code><dd>The value to clone.</dl><tr><th>Returns<tr><td><dl>A clone of the input value.</dl></table></div></details></div></div></section>