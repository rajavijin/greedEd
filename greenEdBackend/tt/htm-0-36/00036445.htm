<div id="main-wrapper"><input type="checkbox" id="sidenav-toggle" /><main><header><h1>Class webdriver.AlertPromise</h1><a class="source" href="source/lib/webdriver/webdriver.js.src.html#l2249">code &raquo;</a><pre><code><a href="class_webdriver_Alert.html">webdriver.Alert</a>
  &#x2514; webdriver.AlertPromise</code></pre><dl><dt>All implemented interfaces:<dd><code><a href="">webdriver.promise.Thenable.&lt;webdriver.Alert&gt;</a></code></dl></header><section><p>AlertPromise is a promise that will be fulfilled with an Alert. This promise
 serves as a forward proxy on an Alert, allowing calls to be scheduled
 directly on this instance before the underlying Alert has been fulfilled. In
 other words, the following two statements are equivalent:
 <pre><code>
     driver.switchTo().alert().dismiss();
     driver.switchTo().alert().then(function(alert) {
       return alert.dismiss();
     });
 </code></pre><h2>Constructor</h2><div class="ctor wrap-details public"><div><div class="ctor"><span class="member">webdriver.AlertPromise <span class="args">( driver, alert )</span></span></div><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>driver: <code class="type">!<a href="class_webdriver_WebDriver.html">webdriver.WebDriver</a></code><dd>The driver controlling the browser this
     alert is attached to.<dt>alert: <code class="type">!<a href="interface_webdriver_promise_Thenable.html">webdriver.promise.Thenable</a></code><dd>A thenable
     that will be fulfilled with the promised alert.</dl></table></div></div></div></section>