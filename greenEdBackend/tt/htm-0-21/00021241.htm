<div id="main-wrapper"><input type="checkbox" id="sidenav-toggle" /><main><header><h1>Interface goog.events.Listenable</h1><a class="source" href="source/lib/goog/events/listenable.js.src.html#l54">code &raquo;</a></header><section><p>A listenable interface. A listenable is an object with the ability
 to dispatch/broadcast events to "event listeners" registered via
 listen/listenOnce.

 The interface allows for an event propagation mechanism similar
 to one offered by native browser event targets, such as
 capture/bubble mechanism, stopping propagation, and preventing
 default actions. Capture/bubble mechanism depends on the ancestor
 tree constructed via <code >#getParentEventTarget</code>; this tree
 must be directed acyclic graph. The meaning of default action(s)
 in preventDefault is specific to a particular use case.

 Implementations that do not support capture/bubble or can not have
 a parent listenable can simply not implement any ability to set the
 parent listenable (and have <code >#getParentEventTarget</code> return
 null).

 Implementation of this class can be used with or independently from
 goog.events.

 Implementation must call <code >#addImplementation(implClass)</code>.</section>