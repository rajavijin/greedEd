<div id="main-wrapper"><input type="checkbox" id="sidenav-toggle" /><main><header><h1>Class webdriver.WebElementPromise</h1><a class="source" href="source/lib/webdriver/webdriver.js.src.html#l2125">code &raquo;</a><pre><code><a href="class_webdriver_WebElement.html">webdriver.WebElement</a>
  &#x2514; webdriver.WebElementPromise</code></pre><dl><dt>All implemented interfaces:<dd><code><a href="">webdriver.promise.Thenable.&lt;webdriver.WebElement&gt;</a></code></dl></header><section><p>WebElementPromise is a promise that will be fulfilled with a WebElement.
 This serves as a forward proxy on WebElement, allowing calls to be
 scheduled without directly on this instance before the underlying
 WebElement has been fulfilled. In other words, the following two statements
 are equivalent:
 <pre><code>
     driver.findElement({id: 'my-button'}).click();
     driver.findElement({id: 'my-button'}).then(function(el) {
       return el.click();
     });
 </code></pre><h2>Constructor</h2><div class="ctor wrap-details public"><div><div class="ctor"><span class="member">webdriver.WebElementPromise <span class="args">( driver, el )</span></span></div><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>driver: <code class="type">!<a href="class_webdriver_WebDriver.html">webdriver.WebDriver</a></code><dd>The parent WebDriver instance for this
     element.<dt>el: <code class="type">!<a href="class_webdriver_promise_Promise.html">webdriver.promise.Promise</a></code><dd>A promise
     that will resolve to the promised element.</dl></table></div></div></div></section>