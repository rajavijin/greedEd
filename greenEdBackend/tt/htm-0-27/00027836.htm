<div><a class="source" href="source/lib/goog/uri/utils.js.src.html#l1010">code &raquo;</a><span class="member"><a name="goog.uri.utils.setParam">goog.uri.utils.setParam</a> <span class="args">( uri, keyEncoded, value )</span> &rArr; <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code></span></div><p>Replaces all existing definitions of a parameter with a single definition.

 Repeated calls to this can exhibit quadratic behavior due to the need to
 find existing instances and reconstruct the string, though it should be
 limited given the 2kb limit.  Consider using appendParams to append multiple
 parameters in bulk.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>uri: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code><dd>The original URI, which may already have query data.<dt>keyEncoded: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code><dd>The key, which must already be URI encoded.<dt>value: <code class="type">*</code><dd>The value, which will be stringized and encoded (assumed
     not already to be encoded).</dl><tr><th>Returns<tr><td><dl>The URI with the query parameter added.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/lib/goog/uri/utils.js.src.html#l1047">code &raquo;</a><span class="member"><a name="goog.uri.utils.setPath">goog.uri.utils.setPath</a> <span class="args">( uri, path )</span> &rArr; <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code></span></div><p>Replaces the path.</summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>uri: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code><dd>URI to use as the base.<dt>path: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code><dd>New path.</dl><tr><th>Returns<tr><td><dl>Updated URI.</dl></table></div></details></div></div><div class="wrap-details public"><div><details class="function"><summary><div><a class="source" href="source/lib/goog/uri/utils.js.src.html#l238">code &raquo;</a><span class="member"><a name="goog.uri.utils.split">goog.uri.utils.split</a> <span class="args">( uri )</span> &rArr; <code class="type">!<a href="http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array">Array</a></code></span></div><p>Splits a URI into its component parts.

 Each component can be accessed via the component indices; for example:
 <pre>
 goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];
 </pre></summary><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>uri: <code class="type"><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String">string</a></code><dd>The URI string to examine.</dl><tr><th>Returns<tr><td><dl>Each component still URI-encoded.
     Each component that is present will contain the encoded value, whereas
     components that are not present will be undefined or empty, depending
     on the browser's regular expression implementation.  Never null, since
     arbitrary strings may still look like path names.</dl></table></div></details></div></div></section>