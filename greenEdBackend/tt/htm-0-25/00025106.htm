<div id="main-wrapper"><input type="checkbox" id="sidenav-toggle" /><main><header><h1>Class webdriver.promise.ControlFlow</h1><a class="source" href="source/lib/webdriver/promise.js.src.html#l1048">code &raquo;</a><pre><code><a href="class_webdriver_EventEmitter.html">webdriver.EventEmitter</a>
  &#x2514; webdriver.promise.ControlFlow</code></pre></header><section><p>Handles the execution of scheduled tasks, each of which may be an
 asynchronous operation. The control flow will ensure tasks are executed in
 the ordered scheduled, starting each task only once those before it have
 completed.

 <p>Each task scheduled within this flow may return a
 <code  class="type"><a href="class_webdriver_promise_Promise.html">webdriver.promise.Promise</a></code> to indicate it is an asynchronous
 operation. The ControlFlow will wait for such promises to be resolved before
 marking the task as completed.

 <p>Tasks and each callback registered on a <code  class="type"><a href="class_webdriver_promise_Deferred.html">webdriver.promise.Deferred</a></code>
 will be run in their own ControlFlow frame.  Any tasks scheduled within a
 frame will have priority over previously scheduled tasks. Furthermore, if
 any of the tasks in the frame fails, the remainder of the tasks in that frame
 will be discarded and the failure will be propagated to the user through the
 callback/task's promised result.

 <p>Each time a ControlFlow empties its task queue, it will fire an
 <code  class="type"><a href="enum_webdriver_promise_ControlFlow_EventType.html#webdriver.promise.ControlFlow.EventType.IDLE">webdriver.promise.ControlFlow.EventType.IDLE</a></code> event. Conversely,
 whenever the flow terminates due to an unhandled error, it will remove all
 remaining tasks in its queue and fire an
 <code  class="type"><a href="enum_webdriver_promise_ControlFlow_EventType.html#webdriver.promise.ControlFlow.EventType.UNCAUGHT_EXCEPTION">webdriver.promise.ControlFlow.EventType.UNCAUGHT_EXCEPTION</a></code> event. If
 there are no listeners registered with the flow, the error will be
 rethrown to the global error handler.<h2>Constructor</h2><div class="ctor wrap-details public"><div><div class="ctor"><span class="member">webdriver.promise.ControlFlow <span class="args">( opt_timer )</span></span></div><div class="info"><table><tbody><tr><th>Parameters<tr><td><dl><dt>opt_timer: <code class="type"><a href="class_webdriver_promise_ControlFlow.html#webdriver.promise.ControlFlow.Timer">webdriver.promise.ControlFlow.Timer</a>=</code><dd>The timer object
     to use. Should only be set for testing.</dl></table></div></div></div></section>